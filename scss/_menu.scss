// Creating the menu button style

.menu-btn {
    //because we want the button to be where we want it to be
    position: absolute;
    z-index: 3;
    right: 35px;
    top: 35px;
    cursor: pointer;
    @include easeOut;

    //adding the style for btn-line (which is the 3 lines on top of each other), used for displaying a menu

    .btn-line {

        width: 28px;
        height: 3px;
        margin: 0 0 5px 0;
        background: set-text-color($primary-color);
        @include easeOut;
    }


    //we will style the menu 3Lines btn when it's closed (must have the class 'close')
    //Rotating into X with Menu Line
    &.close {
        //roating the menu 3Lines 180 degrees, hence we use 'deg' for degree
        transform: rotate(180deg);

        .btn-line {
            // selecting each button line

            //Line 1- will Rotate
            //using the nTh child CSS pseudo-class to select the 1st line from the menu 3 Line btns that has the btn-line div 
            &:nth-child(1) {
                //background: red;
                transform: rotate(45deg) translate(5px, 5px);
                //background: rgba(red, 0.9);
                background: set-text-color($primary-color);
            }



            //Line 2- will Hide
            &:nth-child(2) {
                opacity: 0;
            }


            //Line 3- will Rotate
            &:nth-child(3) {

                //connecting the 1st and 3rd line together to form an X
                //we do this by rotating in the opp direction of the 1st Line,
                //and then we translate until the 2 lines form an X
                transform: rotate(-45deg) translate(7px, -6px);
                //background: rgb(255, 255, 255);
                //width: 100%;
                //height: 0.25rem;
            }

        }
    }


}


//Creating the menu Overlay
.menu {
    position: fixed;
    top: 0;
    width: 100%;
    //creating the see through effect
    //opacity: 0.2;
    // making the visibility of the li elements to be hidden
    visibility: hidden;
    //background: set-text-color($primary-color);


    //when the menu 3Lines btn has the show class, then we will set the li elements (inside the .menu) to be visible
    &.show {
        visibility: visible;
    }


    //adding the branding to .show, hence we use &-
    &-branding,
    &-nav {

        display: flex;
        //making the display into a column
        flex-flow: column wrap;
        //alligning to the center
        align-items: center;
        justify-content: center;
        //allowing the content to be on the left side of the left half
        float: left;
        // giving 50% to each of the screen(width)
        width: 50%;
        height: 100vh;
        //hidding the scrollbar
        overflow: hidden;

    }


    //adding the style for the nav items
    &-nav {
        margin: 0;
        padding: 0;
        background: darken($primary-color, 5);

        list-style: none;
        // taking the nav from top to buttom
        transform: translate3d(0, -100%, 0);
        //transitioning back in
        @include easeOut;

        //when the show class is applied to the nav we will style the following
        &.show {
            //slide in from the top
            transform: translate3d(0, 0, 0);
        }

    }

    //Adding style to the Branding side
    &-branding {
        background: darken(rgba($primary-color, 0.6), 0.5);
        transform: translate3d(0, 100%, 0);
        @include easeOut;


        &.show {
            //Slide in from the bottom
            transform: translate3d(0, 0, 0);

        }


        .portrait {
            z-index: 1;
            width: 250px;
            height: 250px;
            background: url('../../images/workPic.jpg');
            background-size: cover;
            border-radius: 50%;
            border: solid 3px $secondary-color;
        }
    }

    //adding the style for the nav bar item 
    .nav-item {
        transform: translate3d(600px, 0, 0);
        @include easeOut;

        //when the show class appears fromt the js
        &.show {
            //slide in from the right
            transform: translate3d(0, 0, 0);


        }

        //adding color to the <a> (link tag)for the nav-items
        &.current>a {
            color: $secondary-color;
        }
    }

    //adding the style for each of the links for the nav items
    .nav-link {
        display: inline-block;
        position: relative;
        font-size: 30px;
        text-transform: uppercase;
        padding: 1rem 0;
        font-weight: 300;
        color: set-text-color($primary-color);
        text-decoration: none;
        @include easeOut;


        //adding a hover effect for each of the nav-link
        &:hover {
            color: $secondary-color;
        }

    }
}



//Creating the delay for the nav item slide effect by 0.1s
//we will use a for loop to achieve this


//we use 4 because we have 4 nav items(home page, contact me, work, about)
@for $item from 1 through 4 {

    //taking in the nth child from the nav item
    .nav-item:nth-child(#{$item}) {

        //setting transition delay
        //each item has different transition amount
        transition-delay: $item * 0.1s;
    }
}